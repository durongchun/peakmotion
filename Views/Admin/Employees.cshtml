@model IEnumerable<peakmotion.ViewModels.UserVM>

@{ ViewData["Title"] = "Employees";}
<h1 class="mb-4">Employees</h1>

<div class="alert alert-info" id="admin-userRole-response"></div>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().FullName)</th>
            <th>@Html.DisplayNameFor(model => model.First().Email)</th>
            <th>@Html.DisplayNameFor(model => model.First().RoleName)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.FullName</td>
                <td>@user.Email</td>
                <td>
                    @using (Html.BeginForm("EditEmployeeRole", "Admin", FormMethod.Post, new { id = "updateUserRoleForm" }))
                    {
                        <select 
                            name="newRole"
                            class="form-select"
                            onchange="submitForm(this)"
                            data-user-id="@user.Email"
                            asp-for="@user.RoleName" 
                            asp-items="ViewBag.RoleSelectList" 
                            >
                            <option value="">Select Role</option>
                        </select>
                    }
                </td>
                <td>
                    <a asp-action="Delete" asp-route-id="@user.Email">Delete</a>
                </td>
                </tr>
        }
    </tbody>
</table>


<script>
    function submitForm(e) {
        @* Retrieve the values *@
        var newRole = e.value;
        var userEmail = e.getAttribute('data-user-id');
        console.log(`'${newRole}' for ${userEmail}`);

        @* For outputting response message *@
        const messageContainer = document.querySelector("#admin-userRole-response");

        @* Call endpoint to update role *@
        $.ajax({
            url: '@Url.Action("EditEmployeeRole", "Admin")',
            type: 'POST',
            data: { newRole, userEmail },
            success: function (response) {
                messageContainer.textContent = response || "Success";
            },
            error: function (xhr, status, error) {
                messageContainer.textContent = xhr?.responseText || "Error";
            }
        });
    }
</script>

<style>
#admin-userRole-response:empty {
    display: none;
}
</style>