@model ShippingVM
@using peakmotion.ViewModels;

<link rel="stylesheet" href="~/css/payment.css">

<script
    src="https://www.paypal.com/sdk/js?client-id=AT2sUbDtIZArj6muaJWRM-rrwQrPgJomzrI-99S2vpOhY0NlF2m_VP_pbmGqC6c8RJxCZiiGkWg3MV_R&currency=CAD"></script>


@{
    var totalAmount = ViewData["TotalAmount"] as decimal?;
    var formattedTotalAmount = totalAmount.HasValue ? totalAmount.Value.ToString("F2") : "0.00";
}


<div class="mx-7 my-5">
    <partial name="_Shop" for="@Model" />
</div>

    <div class="row">
        <div class="offset-9 col-sm-3 col-md-2">
            <div id="paypal-button-container" style="text-align:right;padding-right:20px;"></div>
        </div>
    </div>
    <div class="row">
        <div class="offset-9 col-sm-2">
            <table class="table">
                <tbody>
                    <tr>
                        <td>
                            <span style="color:darkred;">Amount:</span> 
                            <span id="totalAmount">@formattedTotalAmount</span> 
                            <span id="currency">CAD</span>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

   <script>
    document.addEventListener("DOMContentLoaded", function () {
        var emailField = document.getElementById("email");
        var paypalContainer = document.getElementById("paypal-button-container");

        function renderPayPalButton() {
            paypalContainer.innerHTML = ""; // Clear any existing button
            paypal.Buttons({
                createOrder: function (data, actions) {
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: document.getElementById('totalAmount').textContent.trim(),
                                currency_code: document.getElementById('currency').textContent.trim()
                            }
                        }]
                    });
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
                        console.log("Transaction details:", details);
                        const transactionId = encodeURIComponent(details.id);
                        const amount = encodeURIComponent(details.purchase_units[0].amount.value);
                        const payerName = encodeURIComponent(details.payer.name.given_name);
                        const email = encodeURIComponent(details.payer.email_address);
                        
                        window.location.href =
                            `/Home/PayPalConfirmation?TransactionId=${transactionId}&Amount=${amount}&PayerName=${payerName}&Email=${email}`;
                    });
                },
                onCancel: function () {
                    alert('Transaction was cancelled.');
                },
                onError: function () {
                    alert('An error occurred during the transaction.');
                },
                style: {
                    layout: 'vertical',
                    color: 'blue',
                    shape: 'rect',
                    label: 'paypal'
                }
            }).render("#paypal-button-container");
        }

        function checkEmailAndRenderPayPal() {
            if (emailField.value.trim() !== "") {
                renderPayPalButton();
            } else {
                paypalContainer.innerHTML = "<p style='color:red;'>Please enter your email to proceed with PayPal.</p>";
            }
        }

        // Check when the user types, pastes, or leaves the field
        emailField.addEventListener("input", checkEmailAndRenderPayPal);
        emailField.addEventListener("change", checkEmailAndRenderPayPal);
        emailField.addEventListener("blur", checkEmailAndRenderPayPal);

        // Force-check autofill after a delay
        setTimeout(checkEmailAndRenderPayPal, 500);
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}


