@model IEnumerable<peakmotion.ViewModels.ProductVM>
@inject peakmotion.Repositories.CookieRepo cookieRepo
@inject peakmotion.Repositories.ProductRepo productRepo;

@{
    var cartDict = ViewBag.CartQuantities as Dictionary<int, int> ?? new Dictionary<int, int>();
    var properties = cookieRepo.GetPropertyFromCookie();

    // Variables to store the extracted values for the current product
    string propertyColor = null;
    string propertySize = null;
}

@if (Model != null && Model.Any())
{
    foreach (var product in Model)
    {
        int qty = cartDict.ContainsKey(product.ID) ? cartDict[product.ID] : 0;
        
        decimal finalPrice = product.Price;
        if (product.PriceWithDiscount.HasValue)
        {
            finalPrice = product.PriceWithDiscount.Value;
        }

        // Reset color and size for each product
        propertyColor = null;
        propertySize = null;

        // Find the property for the current product
        foreach (var property in properties)
        {
            if (!string.IsNullOrEmpty(property))
            {
                var parts = property.Split(':');
                if (parts.Length == 3 && int.TryParse(parts[0], out int productId) && productId == product.ID)
                {
                    propertyColor = parts[1];
                    propertySize = parts[2];
                    break; // Exit the loop once the property is found
                }
            }
        }

        <div class="cart-item">
            <div class="cart-item-image">
                @if (product.ImageUrl != null)
                {
                    <img src="@product.ImageUrl" alt="Product" />
                }
                else
                {
                    <img src="~/images/placeholder.png" alt="Product" />
                }
            </div>
            <div class="cart-item-info">
                <h4>@product.ProductName</h4>
                @if (!string.IsNullOrEmpty(propertyColor)  && !string.IsNullOrEmpty(propertySize))  
                {
                    <p>Color: @propertyColor</p>
                    <p>Size: @propertySize</p>
                }
                @if(propertyColor == null && propertySize == null)  
                {
                    <p>Color: @productRepo.GetProductAttributes(product.ID, "color").FirstOrDefault()</p>
                    <p>Size: @productRepo.GetProductAttributes(product.ID, "size").FirstOrDefault()</p>
                }
                <p>Item Price: @finalPrice.ToString("C")</p>
                <form asp-action="Update" asp-controller="Cart" method="post">
                    <input type="hidden" name="productId" value="@product.ID" />
                    <label for="newQty">Quantity:</label>
                    <select id="newQty" name="newQty">
                        @for (int i = 1; i <= (product.Quantity < 10 ? product.Quantity : 10); i++)
                        {
                            if (i == qty)
                            {
                                <option value="@i" selected>@i</option>
                            }
                            else
                            {
                                <option value="@i">@i</option>
                            }
                        }
                    </select>
                    <button type="submit">Update Quantity</button>
                </form>
                <p>Total: @((finalPrice * qty).ToString("C"))</p>
                <div class="cart-item-actions">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <form method="post" asp-controller="Wishlist" asp-action="Add" style="display:inline;">
                            <input type="hidden" name="productId" value="@product.ID" />
                            <button type="submit">Save for Wishlist</button>
                        </form>
                    }
                    <form asp-action="Remove" asp-controller="Cart" method="post" style="display:inline;">
                        <input type="hidden" name="productId" value="@product.ID" />
                        <button type="submit">Remove</button>
                    </form>
                </div>
            </div>
        </div>
    }
}
else
{
    <p>Your cart is empty.</p>
}